plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.4.8'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

checkstyle {
    toolVersion = '10.12.4'
    config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
    configProperties = [
            'checkstyle.cache.file': "${buildDir}/checkstyle/cachefile"
    ]
    // Do not fail the build on style violations initially; tighten later.
    ignoreFailures = true
    showViolations = true
}

tasks.named('check') {
    dependsOn 'checkstyleMain', 'checkstyleTest'
}

tasks.named('test') {
    useJUnitPlatform()
}
