{"is_source_file": true, "format": "Java", "description": "This file defines the ActorRepository interface, extending Spring Data's MongoRepository for CRUD operations on Actor documents, with custom query methods for finding actors by owner ID and name.", "external_files": ["com/example/demo/domain/Actor.java", "org/springframework/data/mongodb/repository/MongoRepository.class"], "external_methods": ["MongoRepository<Actor, String>", "findByOwnerIdAndName(String ownerId, String name)", "findAllByOwnerId(String ownerId)"], "published": ["ActorRepository"], "classes": [{"name": "ActorRepository", "description": "A Spring Data MongoDB repository interface for Actor entities, providing CRUD and custom query methods."}], "methods": [{"name": "findByOwnerIdAndName", "description": "Finds an Actor by owner ID and name, returning an Optional Actor."}, {"name": "findAllByOwnerId", "description": "Finds all Actors associated with a specific owner ID."}], "calls": ["MongoRepository<Actor, String>", "findByOwnerIdAndName(String ownerId, String name)", "findAllByOwnerId(String ownerId)"], "search-terms": ["ActorRepository", "MongoRepository", "findByOwnerIdAndName", "findAllByOwnerId", "Actor"], "state": 2, "file_id": 10, "knowledge_revision": 31, "git_revision": "", "hash": "6fd28b20c2c8e788b56c5ac4d7b2a343", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/main/java/com/example/demo/repository/ActorRepository.java", "revision_history": [{"31": ""}]}